{
	"member": [
		{
			"kind": "member",
			"name": "openDataContext",
			"memberof": "Platform",
			"scope": "instance",
			"pType": "public"
		}
	],
	"function": [
		{
			"kind": "function",
			"type": "Promise<any>",
			"name": "clearData",
			"memberof": "Platform",
			"scope": "instance",
			"params": [
				{
					"name": "func",
					"question": true,
					"type": "any",
					"description": ""
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "Promise<any>",
			"name": "getData",
			"memberof": "Platform",
			"scope": "instance",
			"params": [
				{
					"name": "key",
					"type": "any",
					"description": ""
				},
				{
					"name": "func",
					"question": true,
					"type": "any",
					"description": ""
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "Promise<any>",
			"name": "getUserInfo",
			"memberof": "Platform",
			"scope": "instance",
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "Promise<any>",
			"name": "login",
			"memberof": "Platform",
			"scope": "instance",
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "Promise<any>",
			"name": "openMini",
			"memberof": "Platform",
			"scope": "instance",
			"params": [
				{
					"name": "obj",
					"type": "any",
					"description": ""
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "Promise<any>",
			"name": "removeData",
			"memberof": "Platform",
			"scope": "instance",
			"params": [
				{
					"name": "key",
					"type": "any",
					"description": ""
				},
				{
					"name": "func",
					"question": true,
					"type": "any",
					"description": ""
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "Promise<any>",
			"name": "removeUserCloudStorage",
			"memberof": "Platform",
			"scope": "instance",
			"params": [
				{
					"name": "ary",
					"type": "string[]",
					"description": ""
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "Promise<any>",
			"name": "scopeUserInfo",
			"memberof": "Platform",
			"scope": "instance",
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "Promise<any>",
			"name": "setData",
			"memberof": "Platform",
			"scope": "instance",
			"params": [
				{
					"name": "data",
					"type": "any",
					"description": ""
				},
				{
					"name": "func",
					"question": true,
					"type": "any",
					"description": ""
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "Promise<any>",
			"name": "setUserCloudStorage",
			"memberof": "Platform",
			"scope": "instance",
			"params": [
				{
					"name": "obj",
					"type": "any",
					"description": ""
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "Promise<any>",
			"name": "share",
			"memberof": "Platform",
			"scope": "instance",
			"params": [
				{
					"name": "func",
					"question": true,
					"type": "any",
					"description": ""
				}
			],
			"pType": "public"
		}
	],
	"globalMember": [],
	"globalFunction": [],
	"class": {
		"kind": "interface",
		"name": "Platform",
		"memberof": "",
		"filename": "tools\\Platform.ts",
		"description": "平台数据接口。由于每款游戏通常需要发布到多个平台上，所以提取出一个统一的接口用于开发者获取平台数据信息推荐开发者通过这种方式封装平台逻辑，以保证整体结构的稳定由于不同平台的接口形式各有不同，白鹭推荐开发者将所有接口封装为基于 Promise 的异步形式"
	},
	"pType": "public"
}